program Funcs;
vars
pau, gabo, res : int;

int function FactCic(x:int;);
res, i : int;
{
    res = 1;
    #write(res);
    from i = 1 to x do {
        res *= i;
    }
    return(res);
}

int function FactRec(x:int;);
{
    if (x == 0) then {
        return(1);
    } 
    else { 
        return( x * FactRec(x - 1));
    }
}

int function FiboCic(x:int;);
num1, num2, suma, i : int;
{
    num1 = 0;
    num2 = 1;
    suma = 1;
    #write(x);
    from i = 2 to x do
    {
        suma = num1 + num2;
        num1 = num2;
        num2 = suma;
    }
    return(suma);
}

int function FiboRec(x:int;);
{
    #write(x);
    if (x <= 1) then {
        return(x);
    } else{
        return (FiboRec(x-1) + FiboRec(x-2));
    }
}

main(){
    write("Prueba Fibonacci Ciclo \n");
    write("Ingresa un numero: ");
    read(pau);
    gabo = FiboCic(pau);
    write("El Numero fibonacci de ", pau, " es : ", gabo, " \n\n");
    write("Prueba Fibonacci Recursivo \n");
    write("Ingresa un numero: ");
    read(pau);
    gabo = FiboRec(pau);
    write("El Numero fibonacci de ", pau, " es : ", gabo, " \n\n");

    write("Prueba Factorial Ciclo \n");
    write("Ingresa un numero: ");
    read(pau);
    gabo = FactCic(pau);
    write("El Numero factorial de ", pau, " es : ", gabo, " \n\n");

    write("Prueba Factorial Recursivo \n");
    write("Ingresa un numero: ");
    read(pau);
    gabo = FactRec(pau);
    write("El Numero factorial de ", pau, " es : ", gabo, " \n\n");
    
}